[
  {
    "objectID": "quarto_intro.html",
    "href": "quarto_intro.html",
    "title": "Quarto Basics",
    "section": "",
    "text": "Introduction to Quarto\n\n\n\n\n\n\n\nFigure 1: by Allison Horst.\n\n\nFrom the Quarto README:\nQuarto is an open-source scientific and technical publishing system built on Pandoc. Quarto documents are authored using markdown, an easy to write plain text format.\nIn addition to the core capabilities of Pandoc, Quarto includes:\n\nEmbedding code and output from Python, R, Julia, and JavaScript via integration with Jupyter, Knitr, and Observable.\nA variety of extensions to Pandoc markdown useful for technical writing including cross-references, sub-figures, layout panels, hoverable citations and footnotes, callouts, and more.\nA project system for rendering groups of documents at once, sharing options across documents, and producing aggregate output like websites and books.\nAuthoring using a wide variety of editors and notebooks including JupyterLab, RStudio, and VS Code.\nA visual markdown editor that provides a productive writing interface for composing long-form documents.\n\n\n\nWhy switch from Rmarkdown to Quarto?\nQuarto developers have said that it is not currently necessary to switch to Quarto if you are an R Markdown user, however there are a few reasons it might be a good idea to consider switching:\n\nReduced dependencies. Many features of Rmarkdown require additonal packages while quarto includes these features out-of-the-box. (No more forgeting to install tinytex after you install it!!).\nQuarto is multi-language and multi-engine. Currently supports R, Python, and JavaScript. However, along with the previous bullet point, you only need to install what you use. If you never use python with Quarto, you dont need to install python.\nQuarto is likely to become the new standard. Might as well get ahead of the curve! While R Markdown will still be supported for the forseeable future, new features may only be indroduced in Quarto.\nSwitching is relatively easy. Most Rmarkdown documents you’ve already created can be used.\n\n\n\nA few cool new features and changes\n\nGlobal code chunk options can be set in the yaml header. Instead of the following in R Markdown:\n```{r}\nknitr::opts_chunk$set(echo = FALSE)\n```\nyou can set the option in the yaml header to apply to the whole document:\n---  \ntitle: Quarto Doc\nexecute:\n    echo: false\n---\nAlso, set chunk options as yaml with hashpipe #| instead of in the chunk header\n```{r}\n#| label: Figure 1\n#| fig-cap: \"This figures shows some cool results from an analysis\"\n\nplot(fig1)\n```\nUniversal cross-referencing allows you to reference figures or tables in the text.\n![Speed and Pressure](images/column_plot.png){#fig-mtcars}\n\nThis is illustrated well by @fig-mtcars.\n\n\n\nFigure 2: Speed and Pressure\n\n\nThis is illustrated well by Figure 2.\nEasy to make websites! lots of features! Check out Kelly’s Quarto website: https://sovacool.dev/\nExtensions allow for custom formats. Kelly made a few for manuscripts:\n\nASM-style manuscript\nGeneric preprint/manuscript format\n\nCallout blocks in HTML output! Five different types:\n\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, warning, important, tip, and caution.\n\n\n\n\n\n\n\n\nTip With Title\n\n\n\nThis is an example of a callout with a title.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThis is an important message\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWarning!!\n\n\n\n\n\n\n\n\nExpand To Learn About Collapse\n\n\n\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user. You can use collapse=\"true\" to collapse it by default or collapse=\"false\" to make a collapsible callout that is expanded by default.\n\n\n\n\nMultiple column flexible content layout!!! This has been such a pain in the you-know-what for me previously but it is so easy now using layout. For example, using layout-ncol: 2 in a code chunk will result in the plots being ploted in two columns each with a caption:\n```{r}\n#| layout-ncol: 2\n#| fig-cap: \n#|   - \"Speed and Stopping Distances of Cars\"\n#|   - \"Vapor Pressure of Mercury as a Function of Temperature\"\n\nplot(cars)\nplot(pressure)\n```\n\n\n\n\n\n\n\nSpeed and Stopping Distances of Cars\n\n\n\n\n\n\n\nVapor Pressure as a Function of Temperature\n\n\n\n\n\n\n\nSpecific differences to note that might take some getting used to\n\nchunk options as YAML\n\nuse hashpipe #| to specify within code chunk instead of header\nuse colon instead of equal sign\nlowercase booleans (e.g. true/false)\n\n\n```{r}\n#| echo: true\n\nsummary(data)\n```\n\nuse format instead of output to specify format (e.g. pdf, html)\n\n---\ntitle: \"Quarto Basics\"\nformat: html\n---\n\nuse kebab case (dash-between-words) for YAML keys and figure/layout/code chunk options\n\n```{r}\n#| layout-ncol: 2\n#| fig-cap-location: bottom\n\nplot(fig1)\nplot(fig2)\n```\n\nyou will be rendering the document instead of knitting\n\n\n\nRendering the Quarto File\nhow it works: “When you render a Quarto document, first knitr executes all of the code chunks and creates a new markdown (.md) document which includes the code and its output. The markdown file generated is then processed by pandoc, which creates the finished format. The Render button encapsulates these actions and executes them in the right order for you.” \n\n\nQuarto Setup\nThis tutorial will go over the basics for using Quarto in VS Code, but it also works in RStudio if you prefer.\n\nInstall Quarto\nDownload the Quarto VS Code Extension\n\n\n\nExercises\nClone this practice repository:\ngit clone https://github.com/SchlossLab/quarto_practice\nCreate a new quarto document and play around with including the following. You can chose what interests you most and skip what you aren’t interested in. If you need content, you can find the following in the data and figures folders:\n|- data\n|   |- gapminder.csv                  # the full gapminder dataset\n|   +- mean_gdpPercap_1997_2007.csv   # summary of mean gdpPercap for 1997 & 2007\n|- figures\n|   |- gdp_lifeExp_1997.png       # plot of 1997 gdpPercap vs life expecancy\n|   |- gdp_lifeExp_2007.png       # plot of 2007 gdpPercap vs life expecancy\n|   +- gdp_lifeExp_continent.png  # plot of gdpPercap vs lifeExp 1997 & 2007 by continent\n|- code\n|   +- make_plot.R       # code to make the plots in the figures folder\nHere are some suggestions for exercises:\n\nSet a global option (e.g. echo) help\nPlot several images in the layout of your choice. help\nAdd captions to the figures help-captions, help-subfigures\nReference a figure in text help\nMake a table help\nMake a flowchart help\nadd a citation and bibliography help\nadd a few sections and create a table of contents help\n\n\n\nResources\nTutorial for Quarto (in python)\nUsing R with Quarto\nGuide\nBlog Post by Alison Hill\nBlog post by Nivola Rennie and Colin Gillespie\n\nWebsite with Quarto\nGuide\nPost by Sam Csik\nFont Awesome Extension for Quarto\nQuarto with GitHub Pages"
  }
]